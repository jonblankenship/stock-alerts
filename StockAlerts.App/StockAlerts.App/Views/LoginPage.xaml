<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:StockAlerts.App.Converters;assembly=StockAlerts.App"
             xmlns:animations="clr-namespace:StockAlerts.App.Animations;assembly=StockAlerts.App"
             xmlns:triggers="clr-namespace:StockAlerts.App.Triggers;assembly=StockAlerts.App"
             xmlns:behaviors="clr-namespace:StockAlerts.App.Behaviors;assembly=StockAlerts.App"
             xmlns:views="clr-namespace:StockAlerts.App.Views;assembly=StockAlerts.App"
             mc:Ignorable="d"
             x:Class="StockAlerts.App.Views.LoginPage">
    <ContentPage.Title>
        <OnPlatform x:TypeArguments="x:String">
            <On Platform="iOS, UWP, WinRT, WinPhone" Value="Stock Alerts" />
        </OnPlatform>
    </ContentPage.Title>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />

            <Style x:Key="HeaderLabelStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="FontSize"
                    Value="{StaticResource LittleSize}" />
                <Setter Property="TextColor"
                    Value="{StaticResource LightGrayColor}" />
                <Setter Property="HorizontalOptions"
                    Value="Start" />
            </Style>

            <animations:StoryBoard
              x:Key="LoginAnimation"
              Target="{x:Reference LoginPanel}">
                <animations:FadeInAnimation
                    Direction="Up"
                    Duration="1500" />
            </animations:StoryBoard>

        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Triggers>
        <EventTrigger
            Event="Appearing">
            <triggers:BeginAnimation
                Animation="{StaticResource LoginAnimation}" />
        </EventTrigger>
    </ContentPage.Triggers>

    <Grid
      BackgroundColor="{StaticResource BackgroundColor}">

        <!-- AUTH -->
        <Grid
            x:Name="LoginPanel"
            Padding="0"
            ColumnSpacing="0"
            RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="80" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="60" />
                <RowDefinition Height="80" />
            </Grid.RowDefinitions>
            <!-- LOGIN FORM -->
            <StackLayout   
                Grid.Row="2"
                Margin="50">

                <!-- LOGIN / REGISTER -->
                <Grid
                Margin="48, 24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackLayout  
                  Grid.Column="0"
                  Orientation="Horizontal"
                  HorizontalOptions="Center">
                        <Label     
                        Text="["
                        TextColor="{StaticResource AccentColor}"
                        IsVisible="{Binding IsRegistering, Converter={StaticResource InverseBoolConverter}}"/>
                        <Label
                        Text="LOGIN"/>
                        <Label
                        Text="]"
                        TextColor="{StaticResource AccentColor}"
                        IsVisible="{Binding IsRegistering, Converter={StaticResource InverseBoolConverter}}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                            Command="{Binding SwitchToLoginCommand}"
                            NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                    <StackLayout
                  Grid.Column="1"
                  Orientation="Horizontal"
                  HorizontalOptions="Center">
                        <Label     
                        Text="["
                        TextColor="{StaticResource AccentColor}"
                        IsVisible="{Binding IsRegistering}"/>
                        <Label
                        Text="REGISTER"
                        TextColor="Gray"/>
                        <Label
                        Text="]"
                        TextColor="{StaticResource AccentColor}"
                        IsVisible="{Binding IsRegistering}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                            Command="{Binding SwitchToRegisterCommand}"
                            NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                </Grid>

                <StackLayout IsVisible="{Binding IsRegistering}">
                    <Label
                        Text="E-mail"
                        Style="{StaticResource HeaderLabelStyle}" />
                    <Entry Text="{Binding EmailAddress.Value, Mode=TwoWay}">
                        <Entry.Style>
                            <OnPlatform x:TypeArguments="Style">
                                <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                                <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                            </OnPlatform>
                        </Entry.Style>
                        <Entry.Triggers>
                            <DataTrigger 
                                TargetType="Entry"
                                Binding="{Binding EmailAddress.IsValid}"
                                Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label 
                        Text="{Binding EmailAddress.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                        Style="{StaticResource ValidationErrorLabelStyle}" />
                </StackLayout>
                <Label
                  Text="Username"
                  Style="{StaticResource HeaderLabelStyle}" />
                <Entry Text="{Binding UserName.Value, Mode=TwoWay}">
                    <Entry.Style>
                        <OnPlatform x:TypeArguments="Style">
                            <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                            <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                        </OnPlatform>
                    </Entry.Style>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding UserName.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding UserName.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					Style="{StaticResource ValidationErrorLabelStyle}" />
                <Label
                  Text="Password"
                  Style="{StaticResource HeaderLabelStyle}"/>
                <Entry
                  IsPassword="True"
                  Text="{Binding Password.Value, Mode=TwoWay}">
                    <Entry.Style>
                        <OnPlatform x:TypeArguments="Style">
                            <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                            <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                        </OnPlatform>
                    </Entry.Style>
                    <Entry.Triggers>
                        <DataTrigger 
							TargetType="Entry"
							Binding="{Binding Password.IsValid}"
							Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label 
					Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					Style="{StaticResource ValidationErrorLabelStyle}" />

            </StackLayout>
            <!-- LOGIN ERROR MESSAGE -->
            <Grid
                Grid.Row="3">
                <Label Text="{Binding LoginErrorMessage}" Style="{StaticResource ValidationErrorLabelStyle}" FontAttributes="Bold" HorizontalTextAlignment="Center" VerticalTextAlignment="Center"></Label>
            </Grid>
            <!-- LOGIN BUTTON -->
            <Frame CornerRadius="22" WidthRequest="160" HeightRequest="44" HorizontalOptions="Center" VerticalOptions="Center" Grid.Row="4" HasShadow="True" Padding="0">
                <Button CornerRadius="22" WidthRequest="160" HeightRequest="44" HorizontalOptions="Center" VerticalOptions="Center" Margin="0"
                        Text="{Binding LoginButtonText}" Command="{Binding SignInCommand}"
                        BackgroundColor="{StaticResource DarkGrayColor}" TextColor="{StaticResource WhiteColor}"></Button>
            </Frame>
        </Grid>
        <!-- INDICATOR -->
        <views:LoadingIndicatorView></views:LoadingIndicatorView>
    </Grid>
</ContentPage>